{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { caractersContext } from '../context/userContext';\n\nfunction CharacterPlanet() {\n  _s();\n\n  let location = useLocation();\n  const {\n    caracters\n  } = useContext(caractersContext);\n  const [charactersPlanet, setCharacters] = useState([]);\n  const fetchBusinesses = useCallback(() => {\n    console.log(\"asd\");\n\n    if (location.state) {\n      console.log(location.state.location);\n      const result = caracters.filter(caracter => caracter.location.name === location.state.location);\n      console.log(result);\n      setCharacters(result => [...charactersPlanet, ...result]);\n      console.log(charactersPlanet);\n    }\n  });\n  useEffect(() => {\n    fetchBusinesses();\n  }, [fetchBusinesses]);\n}\n\n_s(CharacterPlanet, \"F01M9jguMtE9cJ11xcTufSZWVx8=\", false, function () {\n  return [useLocation];\n});\n\n_c = CharacterPlanet;\nexport default CharacterPlanet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterPlanet\");","map":{"version":3,"names":["useEffect","useState","useContext","useLocation","caractersContext","CharacterPlanet","location","caracters","charactersPlanet","setCharacters","fetchBusinesses","useCallback","console","log","state","result","filter","caracter","name"],"sources":["C:/Users/ivan_/Desktop/react1/first/src/pages/characterPlanet.js"],"sourcesContent":["import { useEffect, useState, useContext } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { caractersContext } from '../context/userContext';\r\n\r\n \r\n\r\n\r\n\r\n\r\nfunction CharacterPlanet(){\r\n    let location = useLocation();\r\n    const {caracters} = useContext(caractersContext);\r\n    const [charactersPlanet, setCharacters ] = useState([]);\r\n\r\n    const fetchBusinesses = useCallback(() => {\r\n        console.log(\"asd\")\r\n        if(location.state){\r\n            console.log(location.state.location)\r\n            const result = caracters.filter(caracter => caracter.location.name === location.state.location);\r\n            console.log(result)\r\n            setCharacters(result => [...charactersPlanet, ...result])\r\n            console.log(charactersPlanet)\r\n\r\n        }\r\n    });\r\n\r\n    useEffect(()=> {\r\n\r\n      \r\n        fetchBusinesses();\r\n    }, [fetchBusinesses]);\r\n\r\n\r\n    \r\n \r\n\r\n\r\n  \r\n}\r\n\r\n\r\nexport default CharacterPlanet"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;;AAOA,SAASC,eAAT,GAA0B;EAAA;;EACtB,IAAIC,QAAQ,GAAGH,WAAW,EAA1B;EACA,MAAM;IAACI;EAAD,IAAcL,UAAU,CAACE,gBAAD,CAA9B;EACA,MAAM,CAACI,gBAAD,EAAmBC,aAAnB,IAAqCR,QAAQ,CAAC,EAAD,CAAnD;EAEA,MAAMS,eAAe,GAAGC,WAAW,CAAC,MAAM;IACtCC,OAAO,CAACC,GAAR,CAAY,KAAZ;;IACA,IAAGP,QAAQ,CAACQ,KAAZ,EAAkB;MACdF,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACQ,KAAT,CAAeR,QAA3B;MACA,MAAMS,MAAM,GAAGR,SAAS,CAACS,MAAV,CAAiBC,QAAQ,IAAIA,QAAQ,CAACX,QAAT,CAAkBY,IAAlB,KAA2BZ,QAAQ,CAACQ,KAAT,CAAeR,QAAvE,CAAf;MACAM,OAAO,CAACC,GAAR,CAAYE,MAAZ;MACAN,aAAa,CAACM,MAAM,IAAI,CAAC,GAAGP,gBAAJ,EAAsB,GAAGO,MAAzB,CAAX,CAAb;MACAH,OAAO,CAACC,GAAR,CAAYL,gBAAZ;IAEH;EACJ,CAVkC,CAAnC;EAYAR,SAAS,CAAC,MAAK;IAGXU,eAAe;EAClB,CAJQ,EAIN,CAACA,eAAD,CAJM,CAAT;AAYH;;GA7BQL,e;UACUF,W;;;KADVE,e;AAgCT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}