{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivan_\\\\Desktop\\\\react1\\\\first\\\\src\\\\pages\\\\characterPlanet.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { caractersContext } from '../context/userContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CharacterPlanet() {\n  _s();\n\n  let location = useLocation();\n  let {\n    caracters\n  } = useContext(caractersContext);\n  const [loc, setLocation] = useState('');\n  useEffect(() => {\n    async function setData() {\n      console.log(\"asd\");\n\n      if (location.state) {\n        setLocation(location.state.location);\n      }\n    }\n\n    setData();\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: caracters.map((character, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: loc == character.origin.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-product m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: character.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-product\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-character\",\n              children: character.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"species\",\n              children: [\"Especie: \", character.species]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CharacterPlanet, \"Zg3e+dOq2p9a9udnwbofcqYTWug=\", false, function () {\n  return [useLocation];\n});\n\n_c = CharacterPlanet;\nexport default CharacterPlanet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterPlanet\");","map":{"version":3,"names":["useEffect","useState","useContext","useLocation","caractersContext","CharacterPlanet","location","caracters","loc","setLocation","setData","console","log","state","map","character","index","origin","name","image","species"],"sources":["C:/Users/ivan_/Desktop/react1/first/src/pages/characterPlanet.js"],"sourcesContent":["import { useEffect, useState, useContext } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { caractersContext } from '../context/userContext';\r\n\r\n \r\n\r\n\r\n\r\n\r\nfunction CharacterPlanet(){\r\n    let location = useLocation();\r\n    let {caracters} = useContext(caractersContext);\r\n    const [loc, setLocation ] = useState('');\r\n\r\n\r\n    useEffect(()=> { \r\n        async function setData(){\r\n            console.log(\"asd\")\r\n            if(location.state){  \r\n                setLocation(location.state.location);\r\n            }\r\n        }\r\n\r\n        setData();\r\n       \r\n    }, [location]);\r\n\r\n   \r\n\r\n\r\n    \r\n\r\n    return (     \r\n        <div >  \r\n            {\r\n                caracters.map((character, index) => {\r\n                    return (         \r\n                        <div  key={index} className=\"d-flex flex-wrap\"> \r\n                            {loc == character.origin.name && \r\n                                <div className=\"container-product m-3\">\r\n                                    <div className=\"container-image\">\r\n                                        <img src={ character.image }/>\r\n                                    </div>\r\n                                    <div className=\"data-product\">\r\n                                        <div className=\"name-character\">{character.name}</div>\r\n                                        <div className=\"species\">Especie: {character.species}</div>\r\n                                    </div>\r\n                                </div>\r\n                            }       \r\n                        </div>                    \r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CharacterPlanet"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;;;AAOA,SAASC,eAAT,GAA0B;EAAA;;EACtB,IAAIC,QAAQ,GAAGH,WAAW,EAA1B;EACA,IAAI;IAACI;EAAD,IAAcL,UAAU,CAACE,gBAAD,CAA5B;EACA,MAAM,CAACI,GAAD,EAAMC,WAAN,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EAGAD,SAAS,CAAC,MAAK;IACX,eAAeU,OAAf,GAAwB;MACpBC,OAAO,CAACC,GAAR,CAAY,KAAZ;;MACA,IAAGN,QAAQ,CAACO,KAAZ,EAAkB;QACdJ,WAAW,CAACH,QAAQ,CAACO,KAAT,CAAeP,QAAhB,CAAX;MACH;IACJ;;IAEDI,OAAO;EAEV,CAVQ,EAUN,CAACJ,QAAD,CAVM,CAAT;EAiBA,oBACI;IAAA,UAEQC,SAAS,CAACO,GAAV,CAAc,CAACC,SAAD,EAAYC,KAAZ,KAAsB;MAChC,oBACI;QAAkB,SAAS,EAAC,kBAA5B;QAAA,UACKR,GAAG,IAAIO,SAAS,CAACE,MAAV,CAAiBC,IAAxB,iBACG;UAAK,SAAS,EAAC,uBAAf;UAAA,wBACI;YAAK,SAAS,EAAC,iBAAf;YAAA,uBACI;cAAK,GAAG,EAAGH,SAAS,CAACI;YAArB;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YAAK,SAAS,EAAC,cAAf;YAAA,wBACI;cAAK,SAAS,EAAC,gBAAf;cAAA,UAAiCJ,SAAS,CAACG;YAA3C;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAK,SAAS,EAAC,SAAf;cAAA,wBAAmCH,SAAS,CAACK,OAA7C;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA;UAAA;UAAA;UAAA;QAAA;MAFR,GAAWJ,KAAX;QAAA;QAAA;QAAA;MAAA,QADJ;IAeH,CAhBD;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH;;GA9CQX,e;UACUF,W;;;KADVE,e;AAiDT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}